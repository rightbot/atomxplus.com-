From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Shelley Vohr <shelley.vohr@gmail.com>
Date: Wed, 14 Aug 2019 15:36:05 -0700
Subject: fix: vc++ incompatible inline calls

Using const container elements like
const std::vector<const std::string> a = {"a"};
will fail when building without libc++ on: 'The C++ Standard
forbids containers of const elements because
allocator<const T> is ill-formed."

This fixes the issue by changing the container elements to non-const.

diff --git a/chrome/test/chromedriver/webauthn_commands.cc b/chrome/test/chromedriver/webauthn_commands.cc
index b0d4d62bc5003682523382600f8f6c815fdf089c..1f36721b50dc9a5e5fe85e044fc921bb1d0c6666 100644
--- a/chrome/test/chromedriver/webauthn_commands.cc
+++ b/chrome/test/chromedriver/webauthn_commands.cc
@@ -36,7 +36,7 @@ base::DictionaryValue MapParams(
 // Converts the string |keys| in |params| from base64url to base64. Returns a
 // status error if conversion of one of the keys failed.
 Status ConvertBase64UrlToBase64(base::Value* params,
-                                const std::vector<const std::string> keys) {
+                                const std::vector<std::string> keys) {
   for (const std::string key : keys) {
     base::Value* maybe_value = params->FindKey(key);
     if (!maybe_value)
@@ -60,7 +60,7 @@ Status ConvertBase64UrlToBase64(base::Value* params,
 
 // Converts the string |keys| in |params| from base64 to base64url.
 void ConvertBase64ToBase64Url(base::Value* params,
-                              const std::vector<const std::string> keys) {
+                              const std::vector<std::string> keys) {
   for (const std::string key : keys) {
     std::string* maybe_value = params->FindStringKey(key);
     if (!maybe_value)
