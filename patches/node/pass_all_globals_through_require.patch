From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Cheng Zhao <zcbenz@gmail.com>
Date: Sun, 27 Mar 2016 14:42:26 +0900
Subject: Pass all globals through "require"

(cherry picked from commit 7d015419cb7a0ecfe6728431a4ed2056cd411d62)

diff --git a/lib/internal/modules/cjs/loader.js b/lib/internal/modules/cjs/loader.js
index 865e9d13e840351bcf61bec771462fc88ee0a602..b6bef5f0fdb6f60e4baf5fbd647f191a0e290355 100644
--- a/lib/internal/modules/cjs/loader.js
+++ b/lib/internal/modules/cjs/loader.js
@@ -71,6 +71,13 @@ const {
   CHAR_COLON
 } = require('internal/constants');
 
+// Store the "global" variable from global scope into a local scope, so we can
+// still reference it from this file even after we deleted the "global" variable
+// from the global scope.
+const localGlobal = global;
+// Do the same for "Buffer".
+const localBuffer = Buffer;
+
 const isWindows = process.platform === 'win32';
 
 const relativeResolveCache = Object.create(null);
@@ -771,10 +778,12 @@ Module.prototype._compile = function(content, filename) {
   if (requireDepth === 0) statCache = new Map();
   if (inspectorWrapper) {
     result = inspectorWrapper(compiledWrapper, thisValue, exports,
-                              require, module, filename, dirname);
+                              require, module, filename, dirname, process,
+                              localGlobal, localBuffer);
   } else {
     result = compiledWrapper.call(thisValue, exports, require, module,
-                                  filename, dirname);
+                                  filename, dirname, process, localGlobal,
+                                  localBuffer);
   }
   if (requireDepth === 0) statCache = null;
   return result;
